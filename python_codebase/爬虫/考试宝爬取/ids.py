# -*- coding: utf-8 -*-
# All Rights Reserved 
# @Time    : 2022/8/2222:04
# @Author  : Small Fu
# @Email   : 2737454073@qq.com
# @File    : ids.py
__author__ = 'Small Fu'

import json
import pprint
import time
import execjs
import re
import queue
import requests
from faker import Faker
from openpyxl import Workbook

fak = Faker(locale='zh_CN')
row_queue = queue.Queue()
file = ''

# 题目类型
topic_type_dict = {
    '1': '单选题',
    '2': '多选题',
    '3': '判断题',
    '4': '填空题',
    '15': '排序题',
    '14': '不定项选择题',
    '5': '简答题',
    '9': '案例分析',
    '11': '论述题',
    '12': '计算题',
}

head = {
    'user-agent': fak.chrome(),
    'Accept': "application/json, text/plain, */*",
    'CLIENT-IDENTIFIER': "",
    'Content-Type': "application/json;charset=utf-8",
    'device': "zaixiankaoshi",
    'Sign': "460d9702d88e887dbd0127374cd55e4f",
    'TimeStamp': '1658467885823',
    'platform': "web",
    'cookie': ""
}
# head['cookie'] = 'UM_distinctid=1824f37b4ea24a-01c372a654161c-76492e29-144000-1824f37b4ebbca; __gads=ID=a584ec7ee881aac2-22a692bc61d50055:T=1659186428:RT=1659186428:S=ALNI_MZm1eNZ5lrPwtEQ2kuait6xCOwMQw; __gpi=UID=00000821f06e05c9:T=1659186428:RT=1660059836:S=ALNI_MZRyqMTDf0KcA52ncSM0ce2dAHFXg; CNZZDATA1278923901=951862156-1659184477-https%253A%252F%252Fwww.zaixiankaoshi.com%252F%7C1661174839; uu=607de3ea-dc83-430a-8ac5-f6a56216b702; Hm_lvt_fafd23c81b939a6c401dc831cc0eeac6=1659189221,1659190134,1660059762,1661176820; Hm_lpvt_fafd23c81b939a6c401dc831cc0eeac6=1661176836'
head['cookie'] = "UM_distinctid=1824f37b4ea24a-01c372a654161c-76492e29-144000-1824f37b4ebbca; __gads=ID=a584ec7ee881aac2-22a692bc61d50055:T=1659186428:RT=1659186428:S=ALNI_MZm1eNZ5lrPwtEQ2kuait6xCOwMQw; __gpi=UID=00000821f06e05c9:T=1659186428:RT=1661921629:S=ALNI_MZRyqMTDf0KcA52ncSM0ce2dAHFXg; CNZZDATA1278923901=374090975-1664252786-https%253A%252F%252Fwww.zaixiankaoshi.com%252F%7C1664256387; Hm_lvt_fafd23c81b939a6c401dc831cc0eeac6=1662178574,1662271247,1664255984,1664256790; uu=13266624-7250-4351-801f-0070811b4d78; token=cg%2FMZROOc2u%2BM0logWmAF4nKR%2FHjDD1pEQvFVlkJsx4%3D; SOTOKEN=cg%2FMZROOc2u%2BM0logWmAF4nKR%2FHjDD1pEQvFVlkJsx4%3D; Hm_lpvt_fafd23c81b939a6c401dc831cc0eeac6=1664256798"





def dict_cookie(cookie_str: str) -> dict:
    """
    用于获取参数CLIENT-IDENTIFIER
    :param cookie_str: 吧cookie传入
    :return: 返回解析的cookie
    """
    # cookie_str = 'UM_distinctid=180e1ecf7c0a0c-0a0f4c16d3b597-4c647e56-144000-180e1ecf7c141c; __gads=ID=47131fea20bb1962-227ddad8d0d3008f:T=1654576886:RT=1654576886:S=ALNI_MarOK2d8NVYRwMYuJfBhCTxbPjWIA; __gpi=UID=0000066e79c927c4:T=1654576886:RT=1658459397:S=ALNI_MZ44apm0D28iv82jjrjPtCvK7rV2w; uu=c31815dc-d4af-4189-838a-ee8c1690e27c; Hm_lvt_fafd23c81b939a6c401dc831cc0eeac6=1658459397,1658460132; CNZZDATA1278923901=2131432509-1654575948-https%253A%252F%252Fwww.zaixiankaoshi.com%252F%7C1658466970; Hm_lpvt_fafd23c81b939a6c401dc831cc0eeac6=1658466971'
    cookie = {}
    for i in re.split(';|:', cookie_str):
        i_list = i.split('=', 1)
        if len(i_list) > 2:
            continue
        key, values = i_list
        key = key.strip()
        values = values.strip()

        cookie[key] = values
    return cookie


def sign(api_url: str) -> str:
    """
    sign加密参数
    :param api_url: 网站来好api
    :return: 返回加密数据
    """
    o = "12b6bb84e093532fb72b4d65fec3f00b"  # 不变
    # t = "c31815dc-d4af-4189-838a-ee8c1690e27c"  # cookie里面的一个uu
    t = head['CLIENT-IDENTIFIER']  # cookie里面的一个uu
    c = api_url.split('api')[-1]  # api地址
    n = int(time.time() * 1000)  # 时间戳
    cc = (o + t + c + str(n) + o)

    node = execjs.get()
    fanke = node.compile(open('./kab_md5.js', encoding='utf-8').read())

    aa = 'ps()("{t}","{e}")'.format(t=cc, e='hex')

    return fanke.eval(aa), str(n)


# data = {
#     "ids": "[394096093,334414241,334414046,394095442,351080074,394096005,330824071,351068213,394095118,394095142,394095106,394095111,334414248,394096067,334414239,394095985,394095097,334414144,369558964,351072053,330824051,334414246,394095435,394095088,394095438,394095183,394096075,394096037,326684144,394095109,394095104,394096087,256717563,394096086,394095451,394095103,334414204,394095105,394095145,334414288,394096007,256731106,334414058,394095460,394095163,394095473,394096079,394095157,393704308,394095076,606560585,394095036,334414066,394095098,606559406,394095891,442011661,394095153,334414312,394095125,334414186,394095203,334414223,394095208,334414111,394095087,394095027,394096006,394095127,394095221,394095132,334414079,394095143,334414245,394095211,334414297,256718735,334414043,394095863,334414026,394095121,369558978,334414148,394095078,394095166,394095188,394095470,394095434,394095987,394095461,334414033,394095056,394095172,394095207,394095463,334414207,334414290,394095449,394095151,394095102,394095075,394096092,394095046,351082800,394095468,394095471,394096010,394095448,351058137,394095170,606556128,394095158,394095099,326684116,334414042,394095169,394095445,394095994,394095008,394095195,394095178,394096081,394096091,334414185,394096001,394095850,394095862,394095167,394096077,394095058,369558944,351055009,394096046,394095110,394095431,394095124,394096072,394095219,394095016,394096053,369558966,369558941,334414319,394095842,394095845,369558963,606559328,394095010,394095846,334414145,442335831,330824062,394096058,394095081,394096057,394095844,394095095,334329435,394096023,334414196,394095128,394096054,394095015,394096038,394096000,394096031,334414099,394095107,394095135,394095224,394095133,334414075,394095055,394096047,394096078,394095150,394095131,334414081,394095085,394096041,351076197,394095457,442011253,394095100,369558940,394096069,330824046,394096039,351071493,334414059,394096084,394095841,334414260,394095003,394096070,394095328,394093173,394095299,326684164,394095377,394095323,394095326,394095325,369559531,334336048,330824090,394095352,394095370,394095368,394095332,394093187,394095387,394095367,394095348,369559528,394095291,394093182,334331666,394095385,394095390,394095320,394093179,394093176,394095375,394095333,334422113,394095321,394095369,394095380,334334792,394093192,394095371,394095356,330824060,394095340,369559539,334335728,351060366,394095357,606559905,394095290,334422108,394095329,334422123,394095364,369559536,326684140,334422099,334422135,394095297,394095337,394095382,326684150,334422101,394093189,394093175,394095315,394095301,394093190,394095319,256723781,394095378,334422088,394093169,334422087,394093164,394095324,369559529,606556220,334422169,394095318,394095312,394093186,334422109,394095376,393804501,351064163,256734572,369559919,394096008,393715753,369559922,394095859,394096035,369559924,330824049,369559925,351061678,393707724,369559927,351057084,351081970,326684129,369559918,394095981,388824601,320605626,320614276,330832554,369561076]"}
data = {
    "ids": "[293776117,293776071,293775860,293776104,293776171,293776031,293775942,293775920,293776173,293775932,293775956,293776075,293776063,293775979,293776150,293776037,293776178,293775901,293775875,293775906,293775984,475293797,293775830,293776140,293775969,293776182,293775913,293775987,293775976,475294033,293776004,293776055,293776027,293776113,293775955,293775863,293776012,293775944,293775862,293775997,475296232,293776159,293775993,293776144,293775900,293776047,293776007,293775943,293775902,293775933,293776010,293776092,293776134,293775994,293776102,293776040,293775895,293776163,293776048,293776026,293775991,293776039,293775929,293775910,293775934,293776094,444989142,293776019,293775912,293775834,293776108,293776020,293830874,293775963,293775951,293775889,293775946,293775996,293775909,293775962,475300829,293776041,293775958,293776001,475294393,293775857,293776165,293776139,293776067,444989144,293775874,293775931,293775854,293776079,293775869,293776056,293776080,293775968,293776119,293776008,293776088,293776176,293776034,293775831,293775908,293775957,293775922,293830877,293776085,293776179,293775878,293775988,293776053,293775884,293776028,293776062,293775870,293776066,293775887,293775952,293830876,293776169,293775876,293776006,293775939,293776018,293775849,293776033,293775859,293775829,293775848,293776043,293776170,293775873,293776016,293776072,293776114,293775926,293775865,293775941,293776083,293776147,293775982,293776130,293775947,293775853,293775839,293776015,293776089,293775885,293774802,293774907,293774875,293774815,293774787,293774913,293774919,293774878,293774894,293774870,293774789,293774851,293774876,293774766,293774903,293774915,293774793,293774853,293774796,293774761,293774836,293774762,293774837,293774863,293774821,293774805,293774785,293774797,293774823,293774770,293774884,293774832,293774882,293774820,293774909,293774866,293774791,293774886,293774892,293774868,475302867,293774862,293774834,293774775,293774772,293774826,293774778,293774833,293774911,293774900,293774825,293774828,475296417,293774856,293774890,293774861,293774810,293774777,293774917,293774849,293774835,293774871,293774806,293774880,293774891,293774896,293774888,293774767,293774914,293774893,293774846,293774908,293774902,293774807,293774898,293774843,293774841,293774759,293774769,293774897,445025802,445025810,445025808,445025821,445025798,445025794,445025814,293805161,445025829,293805148,445025824,445025811,445025823,445025800,293805156,445025818,445025817,445025807,293805160,445025797,445025826,293805154,293805150,445025809,293805153,445025822,445025795,445025799,293805149,445025816,445025806,445025819,445025803,293805158,475302040,445025796,293805162,445025813,445025804,445025815,445025825,445025805,445025801,293805146,445025820,293805246,445025827,445025828,445025812,445025792,445025841,445025843,445025839,445025831,445025835,386859164,293805147,293826886,293805151,445025837,445025833,445025836,445025844,445025842,293805152,445025834,445025830,445025840,445025838,445025832]"}

head['CLIENT-IDENTIFIER'] = dict_cookie(cookie_str=head['cookie'])['uu']


# 返回ids_row的json
def ids() -> json:
    """
    返回题目
    :rtype: json 返回10个题题目的详情
    """
    url = 'https://www.zaixiankaoshi.com/api/questions/ids'
    head['Sign'], head['TimeStamp'] = sign(url)

    response = requests.post(url, headers=head, data=data)
    print(response)
    if response.status_code == 200:
        res_json = response.json()
        print(res_json)
        # with open(r'D:\专业\codebase\python_codebase\爬虫\考试宝爬取\json_data\zuix.json', 'w+', encoding='utf-8') as file:
        with open(r'./json_data/zuix_hcia.json', 'w+', encoding='utf-8') as file:
            file.write(json.dumps(res_json, ensure_ascii=False))
            file.close()


# ids()


def Parse_ids() -> None:
    """
    解析题目
    :param res_json: 传入题目json
    """
    # res_json = json.loads(open('./ids.json', 'r', encoding='utf-8').read())
    # file = open('./json_data/zuix.json', encoding='utf-8').read()
    file = open('./json_data/zuix_hcia.json', encoding='utf-8').read()
    res_json = json.loads(file)
    json_file = []
    for data in res_json['data']:
        data_dict = {
            'id': data['id'],
            'paperid': data['paperid'],
            'question': data['question'],
            'answer': data['answer'],
            'topic_type': topic_type_dict[data['qtype']],
            'datatime': data['created_at'],
            'options': []
        }
        options = data['options']
        if len(options) > 0:
            for i in json.loads(options):
                data_dict['options'].append({i['Key']: i['Value']})
        json_file.append(data_dict)
    wb = Workbook()  # 新建Excel工作簿
    ws = wb.active  # 使用活动工作表
    ws.cell(1, column=1, value='题干（必填)')
    ws.cell(1, column=2, value='题型 （必填）')
    ws.cell(1, column=3, value='选项 A')
    ws.cell(1, column=4, value='选项 B')
    ws.cell(1, column=5, value='选项 C')
    ws.cell(1, column=6, value='选项 D')
    ws.cell(1, column=7, value='选项E(勿删)')
    ws.cell(1, column=8, value="选项F(勿删)")
    ws.cell(1, column=9, value="选项G(勿删)")
    ws.cell(1, column=10, value="选项H(勿删)")
    ws.cell(1, column=11, value="正确答案（必填）")
    ws.cell(1, column=12, value='解析')
    ws.cell(1, column=13, value='章节')
    ws.cell(1, column=14, value='难度')

    for row, data in enumerate(json_file):
        row = row + 2
        ws.cell(row, column=1, value=data['question'])
        ws.cell(row, column=2, value=data['topic_type'])
        for i in range(3, 11):
            if i - 3 < len(data['options']):
                ws.cell(row, column=i, value=list(data['options'][i - 3].values())[0])
            else:
                ws.cell(row, column=i, value='')
        ws.cell(row, column=11, value=data['answer'])
        ws.cell(row, column=12, value='')
        ws.cell(row, column=13, value='')
        ws.cell(row, column=14, value='')

    wb.save(f'./zuix_hcia.xlsx')

ids()
Parse_ids()
